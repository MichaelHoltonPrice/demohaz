% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/optimization.R
\name{temper_and_tune}
\alias{temper_and_tune}
\title{Solve a minimization problem by doing an initial tempering then fine-tuning
the optimization usking the Hooke-Jeeves algorithm.}
\usage{
temper_and_tune(
  obj_fun,
  th0,
  num_cyc = 100,
  samps_per_cyc = 20,
  temp_vect = 10^(rev(seq(-1, 1, by = 0.25))),
  prop_scale_mat = NULL,
  verbose = FALSE,
  lr = 1e-05,
  ...
)
}
\arguments{
\item{obj_fun}{The objective function to minimize}

\item{th0}{The starting point for minimization}

\item{num_cyc}{Number of cycles for the tempering (default: 100)}

\item{samps_per_cyc}{Samples per cycle for the tempering (default: 20)}

\item{temp_vect}{Temperature vector for the tempering (default:
10^(rev(seq(-1,1,by=.25)))}

\item{prop_scale_mat}{Proposal scale matrix for the tempering (default:
ranges evenly from 0.1 for the hottest temperature to 0.001 for the
coldest temperature, for all parameter values at each temperature).}

\item{verbose}{Whether to print out optimization information
(default: FALSE)}

\item{lr}{The learning rate to use for fine tuning using gradient descent
(default: 1e-5)}

\item{...}{Additional inputs to the objective function}
}
\value{
The best fit parameter vector
}
\description{
This method does robust function minimization by doing an initial
optimization using the parallel tempering algorithm in the this package,
then fine tuning that optimization using the Hooke-Jeeves algorithm from the
dfoptim package. The first input is the objective function to be minimized
and the second input is the starting parameter vector. Optionally, control
parameters for the tempering can be input (the number of cycles, number of
samples per cycle, temperature vector, and proposal scaling matrix).
Additional inputs needed by the objective function can also be input.
}
